{

	"GlideRecord": {
		"scope": "javascript,typescript,plaintext",
		"prefix": "gr",
		"body": [
			"var gr = new GlideRecord('$1');",
			"gr.addQuery('$2', '$3');",
			"gr.query();",
			"while (gr.next()) {",
			"	${4://logic here}",
			"}",
		],
		"description": "Create a GlideRecord"
	},

	"Current Variable": {
		"scope": "javascript,typescript,plaintext",
		"prefix": "cur",
		"body": [
			"var current = new GlideRecord('$1');",
			"current.get('sys_id', '$2');"
		],
		"description": "Create a Current variable for background script"
	},

	"Create GlideAjax": {
		"scope": "javascript,typescript,plaintext",
		"prefix": "ga",
		"body": [
			"var ga = new GlideAjax('$1');",
			"ga.addParam('sysparm_name','$2');",
			"ga.addParam('sysparm_${3:field}', '$4');",
			"ga.getXML(GetResponse);",
			"",
			"function GetResponse(response) {",
			"	var answer = response.responseXML.documentElement.getAttribute('answer');",
			"	${5://logic here}",
			"}",
		],
		"description": "Create a new GlideAjax"
	},
	"addInfoMessage": {
		"scope": "javascript,typescript,plaintext",
		"prefix": "gsa",
		"body": [
			"gs.addInfoMessage('$1 '+ $2);"
		],
		"description": "addInfoMessage"
	},
	"gs.print": {
		"scope": "javascript,typescript,plaintext",
		"prefix": "gsp",
		"body": [
			"gs.print('$1 '+ $2);"
		],
		"description": "gs.print()"
	,
	"debug logger": {
		"scope": "javascript,typescript,plaintext",
		"prefix": "debug",
		"body": [
			"var DEBUG = true; // true or false to Enable/Disable logging",
			"var LOG_PREFIX = '[DEBUG]';",
			"var log = function(){",
			"	if(DEBUG){",
			"		var args = Array.prototype.slice.call(arguments);",
			"		args.unshift(LOG_PREFIX + ' ');",
			"		console.log.apply(console, args);",
			"	}",
			"}"
		],
		"description": "create debug logger function"
	},
    "try catch": {
		"scope": "javascript,typescript,plaintext",
		"prefix": "trc",
		"body": [
            "try {",
            "	${1://logic here}",
            "} catch (err) {",
            "	console.warn('ERROR - '' + err);",
            "   ${2://some more logic here}",
            "}"
        ],
        "description": "Try Cacth Statement"
    }
}
